---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, images, stack, type } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			.title {
				display: block;
				font-size: 2em;
				margin: 0.25em 0 0;
			}
			.description {
				font-size: 0.8em;
				margin-top: 0;
			}
			hr {
				border-top: 1px solid #ddd;
				margin: 1rem 0;
			}
			.last-updated-on {
				font-style: italic;
			}
            .stack-wrapper {
                display: flex;
                align-items: center;
                margin-top: 0;
            }
            .stack-title {
                margin-top: 0;
                margin-right: 0.4em;
            }
            .stack-item {
                margin-top: 0;
            }
            .stack-item ~ .stack-item::before {
                content: ",";
            }
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="swiper">
				<div class="swiper-wrapper">
					<div class="swiper-slide">{images && <img width={720} height={360} src={images[0]} alt="" />}</div>
					<div class="swiper-slide">{images && <img width={720} height={360} src={images[1]} alt="" />}</div>
					<div class="swiper-slide">{images && <img width={720} height={360} src={images[2]} alt="" />}</div>
				</div>
					<!-- If we need pagination -->
					<div class="swiper-pagination"></div>
					<!-- If we need navigation buttons -->
					<div class="swiper-button-prev"></div>
					<div class="swiper-button-next"></div>
				</div>
				<!-- {heroImage && <img width={720} height={360} src={heroImage} alt="" />} -->
				<h1 class="title">{title}</h1>
				<p class="description">{description}</p>
                <div class="stack-wrapper"><p class="stack-title">stack: </p>{stack.map((stackItem: string) => {
                    return <p class="stack-item">{stackItem}</p>
                })}
                </div>
				<FormattedDate date={pubDate} />
				{
					updatedDate && (
						<div class="last-updated-on">
							Last updated on <FormattedDate date={updatedDate} />
						</div>
					)
				}
				<hr />
				<slot />
			</article>
		</main>
		<Footer />
	</body>
</html>

<style is:global>
  /* Unscoped, delivered as-is to the browser.
     Applies to all <h1> tags on your site. */
  h1 { display: none; },
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css" />
<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
<script is:inline>
new Swiper('.swiper', {
  // Optional parameters
  direction: 'horizontal',
  loop: true,

  // If we need pagination
  pagination: {
    el: '.swiper-pagination',
  },

  // Navigation arrows
  navigation: {
    nextEl: '.swiper-button-next',
    prevEl: '.swiper-button-prev',
  },

  // And if we need scrollbar
  scrollbar: {
    el: '.swiper-scrollbar',
  },
});
</script>